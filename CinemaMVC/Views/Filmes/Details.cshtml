@model CinemaMVC.Models.Filme

@{
    ViewBag.Title = "Detalhes do Filme";
    string base64String = Model.Imagem != null ? Convert.ToBase64String(Model.Imagem.Imagem1) : String.Empty;
}


<div class="row">
    <div class="col-sm-6">
        <h3>@ViewBag.Title</h3>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Sessoes")">Sessões</a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Filmes")">Filmes</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>


<div class="form-horizontal">
    <div class="col-md-offset-2 row">

        <div class="form-group">
            @Html.Label("Imagem", "Imagem", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrWhiteSpace(base64String))
                {
                    <div class="ibox float-e-margins">
                        <div class="ibox-content">
                            <img src="@String.Format("data:image/png;base64,{0}", base64String)" alt="@Model.Titulo" style="width: 25%;border:solid" />
                        </div>
                    </div>
                }
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Titulo", "Título", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Descricao", "Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", @disabled = "disabled" })                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Duracao", "Duração", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duracao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("sessoes", "Sessões", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <fieldset>
                    @foreach (var item in CinemaMVC.Helpers.SessaoHelper.GetSessoesByFilmeID(Model.FilmeID).OrderBy(s=>s.Data).ThenBy(h=>h.HorarioInicio))
                    {
                        <a href="@Url.Action("Details","Sessoes",new {id=item.SessaoID})">@item.Data.ToShortDateString()</a>                        
                        <span>das @item.HorarioInicio às @item.HorarioFim</span>
                        <br />
                    }
                </fieldset>
            </div>
        </div>
    </div>
   
    <div class="text-center">
        <div class="form-group">

            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-warning" })
            @Html.ActionLink("Editar", "Edit", "Filmes", new { id = Model.FilmeID }, new { @class = "btn btn-primary" })
            <button onclick="ptint()" class="btn btn-info">Imprimir</button>
        </div>

    </div>

</div>



    @section Scripts {

        <script>

            function ptint() {
                Swal.fire({
                    icon: 'info',
                    title: 'Aviso',
                    text: 'Não Implementado'
                })
            }
        </script>


    }
