@model CinemaMVC.Models.Sessao

@{
    ViewBag.Title = "Deletar Sessão";
    var dataSessao = Model != null ? Model.Data.ToShortDateString() : string.Empty;
}


<div class="row">
    <div class="col-sm-6">
        <h3>@ViewBag.Title</h3>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Sessoes")">Sessões</a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Filmes")">Filmes</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>

<h3>Are you sure you want to delete this?</h3>
<hr />



<div class="form-horizontal">
    <div class="col-md-offset-2 row">

        <div class="form-group">
            @Html.Label("Data", "Data Sessão", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => dataSessao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("HorarioInicio", "Horário Inicio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.HorarioInicio, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("HorarioFim", "Horário Fim", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorarioFim, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("filmes", "Filme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Filme != null)
                {
                    <a href="@Url.Action("Details","Filmes",new {id=Model.Filme.FilmeID})">@Model.Filme.Titulo</a>
                }

            </div>
        </div>

        <div class="form-group">
            @Html.Label("sala", "Sala", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SalaAudioAnimacao != null)
                {
                    <a href="@Url.Action("Details","Salas",new {id=Model.SalaAudioAnimacao.SalaID})">@Model.SalaAudioAnimacao.Sala.Nome</a>
                }

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Audio", "Áudio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SalaAudioAnimacao != null)
                {
                    <a href="@Url.Action("Details","TiposAudio",new {id=Model.SalaAudioAnimacao.TipoAudioID})">@Model.SalaAudioAnimacao.TipoAudio.Descricao</a>
                }

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Animacao", "Animação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SalaAudioAnimacao != null)
                {
                    <a href="@Url.Action("Details","TiposAnimacao",new {id=Model.SalaAudioAnimacao.TipoAnimacaoID})">@Model.SalaAudioAnimacao.TipoAnimacao.Descricao</a>
                }

            </div>
        </div>


    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="text-center">
            <div class="form-group">
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-warning" })
                <input type="submit" value="Deletar" class="btn btn-danger" />
            </div>
        </div>

    }


</div>


