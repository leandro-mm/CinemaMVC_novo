@model CinemaMVC.Models.SalaEditViewModel

@{
    ViewBag.Title = "Editar Dados Sala";
    var opcao2PossuiSessao = CinemaMVC.Helpers.SessaoHelper.HasSessaoVinculada(Model.SalaID, Model.TipoAudioID2, Model.TipoAnimacaoID2);
    var opcao3PossuiSessao = CinemaMVC.Helpers.SessaoHelper.HasSessaoVinculada(Model.SalaID, Model.TipoAudioID3, Model.TipoAnimacaoID3);
}

<div class="row">
    <div class="col-sm-6">
        <h3>@ViewBag.Title</h3>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Sessoes")">Sessões</a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Filmes")">Filmes</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>    
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SalaID)
    @Html.HiddenFor(model => model.SalaAudioAnimacaoID1)
    @Html.HiddenFor(model => model.SalaAudioAnimacaoID2)
    @Html.HiddenFor(model => model.SalaAudioAnimacaoID3)


    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QtdAssentos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QtdAssentos, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1" } })
            @Html.ValidationMessageFor(model => model.QtdAssentos, "", new { @class = "text-danger" })
        </div>
    </div>
    @*//versão 2.0 criar lista de Audio/Animação*@
    <div class="col-md-offset-1 col-md-11">
        <div class="panel-group">
            <div class="panel-body">


                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-camera-retro"> </i> Áudio/Animação Opção 1 <span class="badge badge-warning">(Obrigatório)</span>
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoAudioID1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TipoAudioID1, Model.TipoAudioID1selectList, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TipoAudioID1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoAnimacaoID1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TipoAnimacaoID1, Model.TipoAnimacaoID1selectList, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TipoAnimacaoID1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-camera-retro"> </i> Áudio/Animação Opção 2
                    </div>
                    <div class="panel-body">
                        @if (opcao2PossuiSessao)
                        {
                            //--Não mostra a opção "Selecione" para não dar erro de relacionamento com a sessão
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAudioID2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAudioID2, Model.TipoAudioID2selectList, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAnimacaoID2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAnimacaoID2, Model.TipoAnimacaoID2selectList, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        }
                        else
                        {
                            //--Mostra a opção "Selecione" pois não possui sessão vinculada e vai pode "excluir" o tipo de aúdio/animação
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAudioID2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAudioID2, Model.TipoAudioID2selectList, "Selecione...", htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAnimacaoID2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAnimacaoID2, Model.TipoAnimacaoID2selectList, "Selecione...", htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-camera-retro"> </i> Áudio/Animação Opção 3
                    </div>
                    <div class="panel-body">
                        @if (opcao3PossuiSessao)
                        {
                            //--Não mostra a opção "Selecione" para não dar erro de relacionamento com a sessão
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAudioID3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAudioID3, Model.TipoAudioID3selectList, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAnimacaoID3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAnimacaoID3, Model.TipoAnimacaoID3selectList, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        }
                        else
                        {
                            //--Mostra a opção "Selecione" pois não possui sessão vinculada e vai pode "excluir" o tipo de aúdio/animação
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAudioID3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAudioID3, Model.TipoAudioID3selectList, "Selecione...", htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoAnimacaoID3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.TipoAnimacaoID3, Model.TipoAnimacaoID3selectList, "Selecione...", htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="text-center">
        <div class="form-group">
            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-warning" })
            <input type="submit" value="Salvar" class="btn btn-success" />
        </div>
    </div>


    <div class="col-md-offset-2 col-md-10">

    </div>

</div>

    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
